USE CATALOGO_T;
GO 

SELECT * FROM GENERO;
SELECT * FROM FILME;

/*
	SELECT campo1, campo2, campo3
	FROM tabela1
	TIPO JOIN tabela2
	ON tabela1.campo1 (FK) = tabela2.campo2 (PK) (ou vice-versa)
*/

-- LISTAR TODOS OS FILMES, MONSTRANDO O NOME DO GÊNERO DE CADA UM
-- MESMO QUE UM FILME NÃO POSSUA UM GÊNERO ATRELADO
-- LEFT JOIN
SELECT idFilme, tituloFilme, nomeGenero FROM FILME
LEFT JOIN GENERO
ON FILME.idGenero = GENERO.idGenero;

-- LISTAR SOMENTE OS FILMES QUE POSSUEM GÊNERO, TRAZENDO TAMBÉM
-- TODOS OS GÊNEROS QUE NÃO REPRESENTEM UM FILME
-- RIGHT JOIN
SELECT idFilme, tituloFilme, nomeGenero FROM FILME
RIGHT JOIN GENERO
ON FILME.idGenero = GENERO.idGenero;

-- LISTAR SOMENTE OS FILMES QUE POSSUAM UM GÊNERO DEFINIDO
-- GÊNEROS QUE NÃO CORRESPONDAM A ALGUM FILME NÃO DEVEM SER MOSTRADOS
-- INNER JOIN
SELECT idFilme, tituloFilme, nomeGenero FROM FILME
INNER JOIN GENERO
ON FILME.idGenero = GENERO.idGenero;

-- LISTAR TODOS OS FILMES E TODOS OS GÊNEROS,
-- MESMO QUE NÃO HAJA CORRESPONDÊNCIA ENTRE ELES
-- FULL OUTER JOIN
SELECT idFilme, tituloFilme, nomeGenero FROM FILME
FULL OUTER JOIN GENERO
ON FILME.idGenero = GENERO.idGenero;

-- OUTRO EXEMPLO, FAZENDO A JUNÇÃO COM MAIS DE 2 ENTIDADES
-- LISTAR SOMENTE OS FILMES QUE POSSUAM UM GÊNERO DEFINIDO
-- GÊNEROS QUE NÃO CORRESPONDAM A ALGUM FILME NÃO DEVEM SER MOSTRADOS
-- MOSTRAR TAMBÉM O NOME DO DIRETOR DO FILME
-- INNER JOIN
--SELECT idFilme, tituloFilme, nomeGenero, nomeDiretor FROM FILME
--INNER JOIN GENERO
--ON FILME.idGenero = GENERO.idGenero
--INNER JOIN DIRETOR
--ON FILME.idDiretor = DIRETOR.idDiretor;